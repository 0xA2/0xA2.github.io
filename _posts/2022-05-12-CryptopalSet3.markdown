---
layout: post
title: "Cryptopals Challenges Set 3 - Solutions"
description: "[write-up] Written in Python 3 (code only)"
categories: "Cryptopals"
---
<title>Cryptopals Challenges Set 3 - Solutions - LostMyPlaintext</title>
<p></p>
<p>Challenge 17:</p>

<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">Crypto.Cipher</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">AES</span>
<span style="color: #f92672">from</span> <span style="color: #f8f8f2">base64</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">b64decode</span>
<span style="color: #f92672">from</span> <span style="color: #f8f8f2">os</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">urandom</span>
<span style="color: #f92672">from</span> <span style="color: #f8f8f2">random</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">randint</span>

<span style="color: #f92672">import</span> <span style="color: #f8f8f2">string</span>

<span style="color: #f8f8f2">BLOCKSIZE</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">16</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getRandomString</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">strings</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[</span><span style="color: #e6db74">&quot;MDAwMDAwTm93IHRoYXQgdGhlIHBhcnR5IGlzIGp1bXBpbmc=&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDAxV2l0aCB0aGUgYmFzcyBraWNrZWQgaW4gYW5kIHRoZSBWZWdhJ3MgYXJlIHB1bXBpbic=&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDAyUXVpY2sgdG8gdGhlIHBvaW50LCB0byB0aGUgcG9pbnQsIG5vIGZha2luZw==&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDAzQ29va2luZyBNQydzIGxpa2UgYSBwb3VuZCBvZiBiYWNvbg==&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDA0QnVybmluZyAnZW0sIGlmIHlvdSBhaW4ndCBxdWljayBhbmQgbmltYmxl&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDA1SSBnbyBjcmF6eSB3aGVuIEkgaGVhciBhIGN5bWJhbA==&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDA2QW5kIGEgaGlnaCBoYXQgd2l0aCBhIHNvdXBlZCB1cCB0ZW1wbw==&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDA3SSdtIG9uIGEgcm9sbCwgaXQncyB0aW1lIHRvIGdvIHNvbG8=&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDA4b2xsaW4nIGluIG15IGZpdmUgcG9pbnQgb2g=&quot;</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;MDAwMDA5aXRoIG15IHJhZy10b3AgZG93biBzbyBteSBoYWlyIGNhbiBibG93&quot;</span><span style="color: #f8f8f2">]</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">b64decode(strings[randint(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,len(strings)</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)])</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">padding</span><span style="color: #f8f8f2">(string,</span> <span style="color: #f8f8f2">blockSize):</span>
	<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(string)</span><span style="color: #f92672">%</span><span style="color: #f8f8f2">blockSize</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">:</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">string</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&#39;</span><span style="color: #ae81ff">\x0f</span><span style="color: #e6db74">&#39;</span><span style="color: #f92672">*</span><span style="color: #ae81ff">16</span>
	<span style="color: #f8f8f2">byte</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">blockSize</span><span style="color: #f92672">-</span><span style="color: #f8f8f2">(len(string)</span><span style="color: #f92672">%</span><span style="color: #f8f8f2">blockSize)</span>
	<span style="color: #f8f8f2">pad</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(</span> <span style="color: #f8f8f2">hex(byte)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;0&quot;</span><span style="color: #f8f8f2">)</span> <span style="color: #f8f8f2">)</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">_</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(byte))</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">string</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">pad</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">PKCS7paddingValidation</span><span style="color: #f8f8f2">(string,</span> <span style="color: #f8f8f2">blocksize):</span>
	<span style="color: #f8f8f2">byteNum</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">string[len(string)</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
	<span style="color: #f8f8f2">toVerify</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">string[</span><span style="color: #f92672">-</span><span style="color: #f8f8f2">byteNum:]</span>
	<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">toVerify</span> <span style="color: #f92672">==</span> <span style="color: #f8f8f2">chr(byteNum)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encode()</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">byteNum:</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">True</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">False</span>

<span style="color: #75715e"># Retrieve the padding used in the orignal plaintext</span>
<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getOriginalPadding</span><span style="color: #f8f8f2">(lastBlock,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">previousBlock):</span>
	<span style="color: #f8f8f2">editBlock</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytearray(previousBlock)</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #66d9ef">while</span> <span style="color: #f8f8f2">cbcDecrypt(lastBlock,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">editBlock):</span>
		<span style="color: #f8f8f2">editBlock[ret</span><span style="color: #f92672">+</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">255</span>
		<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">chr(BLOCKSIZE</span> <span style="color: #f92672">-</span> <span style="color: #f8f8f2">ret)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encode()</span>

<span style="color: #75715e"># Get list of ciphertext blocks</span>
<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getBlocks</span><span style="color: #f8f8f2">(ciphertext):</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE):</span>
		<span style="color: #f8f8f2">ret</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(ciphertext[i</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">BLOCKSIZE:(i</span><span style="color: #f92672">+</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">BLOCKSIZE])</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">cbcEncrypt</span><span style="color: #f8f8f2">(plaintext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">iv):</span>
	<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">padding(plaintext,</span> <span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_CBC,</span> <span style="color: #f8f8f2">iv)</span>
	<span style="color: #f8f8f2">ciphertext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(plaintext)</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ciphertext</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">cbcDecrypt</span><span style="color: #f8f8f2">(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">iv):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_CBC,</span> <span style="color: #f8f8f2">iv)</span>
	<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">decrypt(ciphertext)</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">PKCS7paddingValidation(plaintext,</span> <span style="color: #f8f8f2">BLOCKSIZE)</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">cbcPaddingOracleAttack</span><span style="color: #f8f8f2">(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">iv):</span>
	<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">blocks</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getBlocks(ciphertext)</span>
	<span style="color: #f8f8f2">blocks</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">insert(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,iv)</span>

	<span style="color: #75715e"># We&#39;ll need this later for solving ambiguities</span>
	<span style="color: #f8f8f2">originalPadding</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getOriginalPadding(blocks[</span> <span style="color: #f8f8f2">len(blocks)</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span>  <span style="color: #f8f8f2">],</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">blocks[</span> <span style="color: #f8f8f2">len(blocks)</span><span style="color: #f92672">-</span><span style="color: #ae81ff">2</span>  <span style="color: #f8f8f2">])</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Original Paddind:&quot;</span><span style="color: #f8f8f2">,originalPadding)</span>

	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">len(blocks)</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">):</span>

		<span style="color: #f8f8f2">chunk</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>

		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,BLOCKSIZE):</span>
			<span style="color: #f8f8f2">curBlock</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytearray(blocks[i])</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(chunk)</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">:</span>
				<span style="color: #f8f8f2">tmp</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">BLOCKSIZE</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
				<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">ch</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">len(chunk)):</span>
					<span style="color: #f8f8f2">curBlock[tmp]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(chunk)</span><span style="color: #f92672">+</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">chunk[ch]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">curBlock[tmp]</span>
					<span style="color: #f8f8f2">tmp</span> <span style="color: #f92672">-=</span> <span style="color: #ae81ff">1</span>

			<span style="color: #f8f8f2">options</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
			<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">k</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span><span style="color: #ae81ff">256</span><span style="color: #f8f8f2">):</span>
				<span style="color: #f8f8f2">curBlock[len(curBlock)</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f92672">-</span><span style="color: #f8f8f2">j]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">k</span>
				<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">cbcDecrypt(</span> <span style="color: #f8f8f2">bytearray(blocks[i</span><span style="color: #f92672">+</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]),</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">curBlock):</span>
					<span style="color: #f8f8f2">options</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(k)</span>

			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(options)</span> <span style="color: #f92672">==</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:</span>
				<span style="color: #f8f8f2">chunk</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">chr(</span> <span style="color: #f8f8f2">options[</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">(len(chunk)</span><span style="color: #f92672">+</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">blocks[i][BLOCKSIZE</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f92672">-</span><span style="color: #f8f8f2">j]</span> <span style="color: #f8f8f2">)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encode()</span>
			<span style="color: #66d9ef">else</span><span style="color: #f8f8f2">:</span>
				<span style="color: #f8f8f2">nextChar</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
				<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">op</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">options:</span>
						<span style="color: #f8f8f2">curChar</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">chr(</span> <span style="color: #f8f8f2">op</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">(len(chunk)</span><span style="color: #f92672">+</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">blocks[i][BLOCKSIZE</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f92672">-</span><span style="color: #f8f8f2">j]</span> <span style="color: #f8f8f2">)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encode()</span>
						<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">curChar</span> <span style="color: #f92672">==</span> <span style="color: #f8f8f2">originalPadding:</span>
							<span style="color: #f8f8f2">nextChar</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">curChar</span>
				<span style="color: #f8f8f2">chunk</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">nextChar</span>

		<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">chunk[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>

	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">plaintext</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>

	<span style="color: #f8f8f2">key</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">urandom(BLOCKSIZE)</span>
	<span style="color: #f8f8f2">iv</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">urandom(BLOCKSIZE)</span>

	<span style="color: #f8f8f2">string</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getRandomString()</span>
	<span style="color: #f8f8f2">ciphertext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">cbcEncrypt(string,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">iv)</span>
	<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">cbcPaddingOracleAttack(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">iv)</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Original plaintext:&quot;</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">string)</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Decryption result:&quot;</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">plaintext)</span>

<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&quot;__main__&quot;</span><span style="color: #f8f8f2">:</span>
	<span style="color: #f8f8f2">main()</span>
</pre></div>

<p></p>
<p>Challenge 18:</p>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">Crypto.Cipher</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">AES</span>
<span style="color: #f92672">from</span> <span style="color: #f8f8f2">Crypto.Util</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">Counter</span>

<span style="color: #f92672">import</span> <span style="color: #f8f8f2">base64</span>

<span style="color: #f8f8f2">BLOCKSIZE</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">16</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">xorStrings</span><span style="color: #f8f8f2">(data0,</span> <span style="color: #f8f8f2">data1):</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(data0[i]</span><span style="color: #f92672">^</span><span style="color: #f8f8f2">data1[i])[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(min(len(data0),len(data1))))</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">encrypt</span><span style="color: #f8f8f2">(plaintext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_ECB)</span>
	<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">keyLen</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(plaintext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span> <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(plaintext)</span><span style="color: #f92672">%</span><span style="color: #ae81ff">16</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span> <span style="color: #66d9ef">else</span> <span style="color: #f8f8f2">(len(plantext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">keyLen):</span>
		<span style="color: #f8f8f2">curCounter</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(counter)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:(BLOCKSIZE</span><span style="color: #f92672">+</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(BLOCKSIZE,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(nonce</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">curCounter)</span>
		<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xorStrings(plaintext,</span> <span style="color: #f8f8f2">keyStream)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">decrypt</span><span style="color: #f8f8f2">(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_ECB)</span>
	<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">keyLen</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span> <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(ciphertext)</span><span style="color: #f92672">%</span><span style="color: #ae81ff">16</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span> <span style="color: #66d9ef">else</span> <span style="color: #f8f8f2">(len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">keyLen):</span>
		<span style="color: #f8f8f2">curCounter</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(counter)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:(BLOCKSIZE</span><span style="color: #f92672">+</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(BLOCKSIZE,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(nonce</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">curCounter)</span>
		<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xorStrings(ciphertext,</span> <span style="color: #f8f8f2">keyStream)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">key</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;YELLOW SUBMARINE&quot;</span>
	<span style="color: #f8f8f2">nonce</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&#39;</span><span style="color: #ae81ff">\x00</span><span style="color: #e6db74">&#39;</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">(BLOCKSIZE</span><span style="color: #f92672">//</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">ciphertext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">base64</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b64decode(</span><span style="color: #e6db74">&quot;L77na/nrFsKvynd6HzOoG7GHTLXsTVu9qvY/2syLXzhPweyyMTJULu/6/kXX0KSvoOLSFQ==&quot;</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">decrypt(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce)</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span> <span style="color: #f8f8f2">plaintext</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">decode()</span> <span style="color: #f8f8f2">)</span>

<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&quot;__main__&quot;</span><span style="color: #f8f8f2">:</span>
	<span style="color: #f8f8f2">main()</span>
</pre></div>

<p></p>
<p>Challenge 19:</p>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">Crypto.Cipher</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">AES</span>
<span style="color: #f92672">from</span> <span style="color: #f8f8f2">os</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">urandom</span>

<span style="color: #f92672">import</span> <span style="color: #f8f8f2">base64</span>

<span style="color: #f8f8f2">BLOCKSIZE</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">16</span>

<span style="color: #f8f8f2">plaintexts</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[</span><span style="color: #e6db74">&#39;SSBoYXZlIG1ldCB0aGVtIGF0IGNsb3NlIG9mIGRheQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Q29taW5nIHdpdGggdml2aWQgZmFjZXM=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;RnJvbSBjb3VudGVyIG9yIGRlc2sgYW1vbmcgZ3JleQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;RWlnaHRlZW50aC1jZW50dXJ5IGhvdXNlcy4=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SSBoYXZlIHBhc3NlZCB3aXRoIGEgbm9kIG9mIHRoZSBoZWFk&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;T3IgcG9saXRlIG1lYW5pbmdsZXNzIHdvcmRzLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;T3IgaGF2ZSBsaW5nZXJlZCBhd2hpbGUgYW5kIHNhaWQ=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;UG9saXRlIG1lYW5pbmdsZXNzIHdvcmRzLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QW5kIHRob3VnaHQgYmVmb3JlIEkgaGFkIGRvbmU=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;T2YgYSBtb2NraW5nIHRhbGUgb3IgYSBnaWJl&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VG8gcGxlYXNlIGEgY29tcGFuaW9u&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QXJvdW5kIHRoZSBmaXJlIGF0IHRoZSBjbHViLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QmVpbmcgY2VydGFpbiB0aGF0IHRoZXkgYW5kIEk=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QnV0IGxpdmVkIHdoZXJlIG1vdGxleSBpcyB3b3JuOg==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QWxsIGNoYW5nZWQsIGNoYW5nZWQgdXR0ZXJseTo=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QSB0ZXJyaWJsZSBiZWF1dHkgaXMgYm9ybi4=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhhdCB3b21hbidzIGRheXMgd2VyZSBzcGVudA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SW4gaWdub3JhbnQgZ29vZCB3aWxsLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGVyIG5pZ2h0cyBpbiBhcmd1bWVudA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VW50aWwgaGVyIHZvaWNlIGdyZXcgc2hyaWxsLg==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;V2hhdCB2b2ljZSBtb3JlIHN3ZWV0IHRoYW4gaGVycw==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;V2hlbiB5b3VuZyBhbmQgYmVhdXRpZnVsLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U2hlIHJvZGUgdG8gaGFycmllcnM/&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhpcyBtYW4gaGFkIGtlcHQgYSBzY2hvb2w=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QW5kIHJvZGUgb3VyIHdpbmdlZCBob3JzZS4=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhpcyBvdGhlciBoaXMgaGVscGVyIGFuZCBmcmllbmQ=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;V2FzIGNvbWluZyBpbnRvIGhpcyBmb3JjZTs=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGUgbWlnaHQgaGF2ZSB3b24gZmFtZSBpbiB0aGUgZW5kLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U28gc2Vuc2l0aXZlIGhpcyBuYXR1cmUgc2VlbWVkLA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U28gZGFyaW5nIGFuZCBzd2VldCBoaXMgdGhvdWdodC4=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhpcyBvdGhlciBtYW4gSSBoYWQgZHJlYW1lZA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QSBkcnVua2VuLCB2YWluLWdsb3Jpb3VzIGxvdXQu&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGUgaGFkIGRvbmUgbW9zdCBiaXR0ZXIgd3Jvbmc=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VG8gc29tZSB3aG8gYXJlIG5lYXIgbXkgaGVhcnQs&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;WWV0IEkgbnVtYmVyIGhpbSBpbiB0aGUgc29uZzs=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGUsIHRvbywgaGFzIHJlc2lnbmVkIGhpcyBwYXJ0&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SW4gdGhlIGNhc3VhbCBjb21lZHk7&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGUsIHRvbywgaGFzIGJlZW4gY2hhbmdlZCBpbiBoaXMgdHVybiw=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VHJhbnNmb3JtZWQgdXR0ZXJseTo=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QSB0ZXJyaWJsZSBiZWF1dHkgaXMgYm9ybi4=&#39;</span><span style="color: #f8f8f2">]</span>

<span style="color: #f8f8f2">freqs</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span>
      <span style="color: #e6db74">&#39;A&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0651738</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;B&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0124248</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;C&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0217339</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;D&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0349835</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;E&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.1241442</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;F&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0197881</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;G&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0158610</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;H&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0492888</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;I&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0558094</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;J&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0009033</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;K&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0050529</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;L&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0331490</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;M&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0202124</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;N&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0564513</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;O&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0596302</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;P&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0137645</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;Q&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0008606</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;R&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0497563</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;S&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0515760</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;T&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0729357</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;U&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0225134</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;V&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0082903</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;W&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0171272</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;X&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0013692</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;Y&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0145984</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;Z&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0007836</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39; &#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.1918182</span>
<span style="color: #f8f8f2">}</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">score</span><span style="color: #f8f8f2">(s):</span>
	<span style="color: #f8f8f2">score</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">s:</span>
		<span style="color: #f8f8f2">cur</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">chr(c)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">upper()</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">cur</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">freqs:</span>
			<span style="color: #f8f8f2">score</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">freqs[cur]</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">score</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">singleByteXor</span><span style="color: #f8f8f2">(string,</span> <span style="color: #f8f8f2">n):</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(n</span><span style="color: #f92672">^</span><span style="color: #f8f8f2">c)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;0&quot;</span><span style="color: #f8f8f2">))</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">string)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">xorStrings</span><span style="color: #f8f8f2">(data0,</span> <span style="color: #f8f8f2">data1):</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(data0[i]</span><span style="color: #f92672">^</span><span style="color: #f8f8f2">data1[i])[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(min(len(data0),len(data1))))</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">encrypt</span><span style="color: #f8f8f2">(plaintext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_ECB)</span>
	<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">keyLen</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(plaintext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span> <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(plaintext)</span><span style="color: #f92672">%</span><span style="color: #ae81ff">16</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span> <span style="color: #66d9ef">else</span> <span style="color: #f8f8f2">(len(plantext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">keyLen):</span>
		<span style="color: #f8f8f2">curCounter</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(counter)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:(BLOCKSIZE</span><span style="color: #f92672">+</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(BLOCKSIZE,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(nonce</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">curCounter)</span>
		<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xorStrings(plaintext,</span> <span style="color: #f8f8f2">keyStream)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">decrypt</span><span style="color: #f8f8f2">(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_ECB)</span>
	<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">keyLen</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span> <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(ciphertext)</span><span style="color: #f92672">%</span><span style="color: #ae81ff">16</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span> <span style="color: #66d9ef">else</span> <span style="color: #f8f8f2">(len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">keyLen):</span>
		<span style="color: #f8f8f2">curCounter</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(counter)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:(BLOCKSIZE</span><span style="color: #f92672">+</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(BLOCKSIZE,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(nonce</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">curCounter)</span>
		<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xorStrings(ciphertext,</span> <span style="color: #f8f8f2">keyStream)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getBlocks</span><span style="color: #f8f8f2">(ciphertexts,</span> <span style="color: #f8f8f2">keySize):</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(keySize):</span>
		<span style="color: #f8f8f2">block</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(len(ciphertexts)):</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">&lt;</span> <span style="color: #f8f8f2">len(ciphertexts[j]):</span>
				<span style="color: #f8f8f2">block</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">bytes([ciphertexts[j][i]])</span>
			<span style="color: #66d9ef">else</span><span style="color: #f8f8f2">:</span>
				<span style="color: #66d9ef">continue</span>
		<span style="color: #f8f8f2">ret</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(block)</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getKey</span><span style="color: #f8f8f2">(blocks):</span>
	<span style="color: #f8f8f2">key</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">block</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">blocks:</span>
		<span style="color: #f8f8f2">maxScore</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
		<span style="color: #f8f8f2">keyGuess</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span><span style="color: #ae81ff">256</span><span style="color: #f8f8f2">):</span>
			<span style="color: #f8f8f2">curTry</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">singleByteXor(block,i)</span>
			<span style="color: #f8f8f2">curScore</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">score(curTry)</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">curScore</span> <span style="color: #f92672">&gt;</span> <span style="color: #f8f8f2">maxScore:</span>
				<span style="color: #f8f8f2">maxScore</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">curScore</span>
				<span style="color: #f8f8f2">keyGuess</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes([i])</span>
		<span style="color: #f8f8f2">key</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">keyGuess</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">key</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">key</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">urandom(BLOCKSIZE)</span>
	<span style="color: #f8f8f2">nonce</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&#39;</span><span style="color: #ae81ff">\x00</span><span style="color: #e6db74">&#39;</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">(BLOCKSIZE</span><span style="color: #f92672">//</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">ciphertexts</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">pt</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">plaintexts:</span>
		<span style="color: #f8f8f2">ciphertexts</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(decrypt(base64</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b64decode(pt),key,nonce))</span>
	<span style="color: #f8f8f2">keySize</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">len(max(ciphertexts,</span> <span style="color: #f8f8f2">key</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">len))</span>
	<span style="color: #f8f8f2">blocks</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getBlocks(ciphertexts,</span> <span style="color: #f8f8f2">keySize)</span>
	<span style="color: #f8f8f2">keyGuess</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getKey(blocks)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(len(ciphertexts)):</span>
		<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(xorStrings(ciphertexts[i],keyGuess))</span>

<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&quot;__main__&quot;</span><span style="color: #f8f8f2">:</span>
	<span style="color: #f8f8f2">main()</span>
</pre></div>

<p></p>
<p>Challenge 20:</p>

<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">Crypto.Cipher</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">AES</span>
<span style="color: #f92672">from</span> <span style="color: #f8f8f2">os</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">urandom</span>

<span style="color: #f92672">import</span> <span style="color: #f8f8f2">base64</span>

<span style="color: #f8f8f2">BLOCKSIZE</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">16</span>

<span style="color: #f8f8f2">plaintexts</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[</span><span style="color: #e6db74">&#39;SSdtIHJhdGVkICJSIi4uLnRoaXMgaXMgYSB3YXJuaW5nLCB5YSBiZXR0ZXIgdm9pZCAvIFBvZXRzIGFyZSBwYXJhbm9pZCwgREoncyBELXN0cm95ZWQ=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Q3V6IEkgY2FtZSBiYWNrIHRvIGF0dGFjayBvdGhlcnMgaW4gc3BpdGUtIC8gU3RyaWtlIGxpa2UgbGlnaHRuaW4nLCBJdCdzIHF1aXRlIGZyaWdodGVuaW4nIQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QnV0IGRvbid0IGJlIGFmcmFpZCBpbiB0aGUgZGFyaywgaW4gYSBwYXJrIC8gTm90IGEgc2NyZWFtIG9yIGEgY3J5LCBvciBhIGJhcmssIG1vcmUgbGlrZSBhIHNwYXJrOw==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;WWEgdHJlbWJsZSBsaWtlIGEgYWxjb2hvbGljLCBtdXNjbGVzIHRpZ2h0ZW4gdXAgLyBXaGF0J3MgdGhhdCwgbGlnaHRlbiB1cCEgWW91IHNlZSBhIHNpZ2h0IGJ1dA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U3VkZGVubHkgeW91IGZlZWwgbGlrZSB5b3VyIGluIGEgaG9ycm9yIGZsaWNrIC8gWW91IGdyYWIgeW91ciBoZWFydCB0aGVuIHdpc2ggZm9yIHRvbW9ycm93IHF1aWNrIQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;TXVzaWMncyB0aGUgY2x1ZSwgd2hlbiBJIGNvbWUgeW91ciB3YXJuZWQgLyBBcG9jYWx5cHNlIE5vdywgd2hlbiBJJ20gZG9uZSwgeWEgZ29uZSE=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGF2ZW4ndCB5b3UgZXZlciBoZWFyZCBvZiBhIE1DLW11cmRlcmVyPyAvIFRoaXMgaXMgdGhlIGRlYXRoIHBlbmFsdHksYW5kIEknbSBzZXJ2aW4nIGE=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;RGVhdGggd2lzaCwgc28gY29tZSBvbiwgc3RlcCB0byB0aGlzIC8gSHlzdGVyaWNhbCBpZGVhIGZvciBhIGx5cmljYWwgcHJvZmVzc2lvbmlzdCE=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;RnJpZGF5IHRoZSB0aGlydGVlbnRoLCB3YWxraW5nIGRvd24gRWxtIFN0cmVldCAvIFlvdSBjb21lIGluIG15IHJlYWxtIHlhIGdldCBiZWF0IQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhpcyBpcyBvZmYgbGltaXRzLCBzbyB5b3VyIHZpc2lvbnMgYXJlIGJsdXJyeSAvIEFsbCB5YSBzZWUgaXMgdGhlIG1ldGVycyBhdCBhIHZvbHVtZQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGVycm9yIGluIHRoZSBzdHlsZXMsIG5ldmVyIGVycm9yLWZpbGVzIC8gSW5kZWVkIEknbSBrbm93bi15b3VyIGV4aWxlZCE=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Rm9yIHRob3NlIHRoYXQgb3Bwb3NlIHRvIGJlIGxldmVsIG9yIG5leHQgdG8gdGhpcyAvIEkgYWluJ3QgYSBkZXZpbCBhbmQgdGhpcyBhaW4ndCB0aGUgRXhvcmNpc3Qh&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;V29yc2UgdGhhbiBhIG5pZ2h0bWFyZSwgeW91IGRvbid0IGhhdmUgdG8gc2xlZXAgYSB3aW5rIC8gVGhlIHBhaW4ncyBhIG1pZ3JhaW5lIGV2ZXJ5IHRpbWUgeWEgdGhpbms=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Rmxhc2hiYWNrcyBpbnRlcmZlcmUsIHlhIHN0YXJ0IHRvIGhlYXI6IC8gVGhlIFItQS1LLUktTSBpbiB5b3VyIGVhcjs=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhlbiB0aGUgYmVhdCBpcyBoeXN0ZXJpY2FsIC8gVGhhdCBtYWtlcyBFcmljIGdvIGdldCBhIGF4IGFuZCBjaG9wcyB0aGUgd2Fjaw==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U29vbiB0aGUgbHlyaWNhbCBmb3JtYXQgaXMgc3VwZXJpb3IgLyBGYWNlcyBvZiBkZWF0aCByZW1haW4=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;TUMncyBkZWNheWluZywgY3V6IHRoZXkgbmV2ZXIgc3RheWVkIC8gVGhlIHNjZW5lIG9mIGEgY3JpbWUgZXZlcnkgbmlnaHQgYXQgdGhlIHNob3c=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhlIGZpZW5kIG9mIGEgcmh5bWUgb24gdGhlIG1pYyB0aGF0IHlvdSBrbm93IC8gSXQncyBvbmx5IG9uZSBjYXBhYmxlLCBicmVha3MtdGhlIHVuYnJlYWthYmxl&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;TWVsb2RpZXMtdW5tYWthYmxlLCBwYXR0ZXJuLXVuZXNjYXBhYmxlIC8gQSBob3JuIGlmIHdhbnQgdGhlIHN0eWxlIEkgcG9zc2Vz&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SSBibGVzcyB0aGUgY2hpbGQsIHRoZSBlYXJ0aCwgdGhlIGdvZHMgYW5kIGJvbWIgdGhlIHJlc3QgLyBGb3IgdGhvc2UgdGhhdCBlbnZ5IGEgTUMgaXQgY2FuIGJl&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SGF6YXJkb3VzIHRvIHlvdXIgaGVhbHRoIHNvIGJlIGZyaWVuZGx5IC8gQSBtYXR0ZXIgb2YgbGlmZSBhbmQgZGVhdGgsIGp1c3QgbGlrZSBhIGV0Y2gtYS1za2V0Y2g=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U2hha2UgJ3RpbGwgeW91ciBjbGVhciwgbWFrZSBpdCBkaXNhcHBlYXIsIG1ha2UgdGhlIG5leHQgLyBBZnRlciB0aGUgY2VyZW1vbnksIGxldCB0aGUgcmh5bWUgcmVzdCBpbiBwZWFjZQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SWYgbm90LCBteSBzb3VsJ2xsIHJlbGVhc2UhIC8gVGhlIHNjZW5lIGlzIHJlY3JlYXRlZCwgcmVpbmNhcm5hdGVkLCB1cGRhdGVkLCBJJ20gZ2xhZCB5b3UgbWFkZSBpdA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Q3V6IHlvdXIgYWJvdXQgdG8gc2VlIGEgZGlzYXN0cm91cyBzaWdodCAvIEEgcGVyZm9ybWFuY2UgbmV2ZXIgYWdhaW4gcGVyZm9ybWVkIG9uIGEgbWljOg==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;THlyaWNzIG9mIGZ1cnkhIEEgZmVhcmlmaWVkIGZyZWVzdHlsZSEgLyBUaGUgIlIiIGlzIGluIHRoZSBob3VzZS10b28gbXVjaCB0ZW5zaW9uIQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;TWFrZSBzdXJlIHRoZSBzeXN0ZW0ncyBsb3VkIHdoZW4gSSBtZW50aW9uIC8gUGhyYXNlcyB0aGF0J3MgZmVhcnNvbWU=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;WW91IHdhbnQgdG8gaGVhciBzb21lIHNvdW5kcyB0aGF0IG5vdCBvbmx5IHBvdW5kcyBidXQgcGxlYXNlIHlvdXIgZWFyZHJ1bXM7IC8gSSBzaXQgYmFjayBhbmQgb2JzZXJ2ZSB0aGUgd2hvbGUgc2NlbmVyeQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhlbiBub25jaGFsYW50bHkgdGVsbCB5b3Ugd2hhdCBpdCBtZWFuIHRvIG1lIC8gU3RyaWN0bHkgYnVzaW5lc3MgSSdtIHF1aWNrbHkgaW4gdGhpcyBtb29k&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QW5kIEkgZG9uJ3QgY2FyZSBpZiB0aGUgd2hvbGUgY3Jvd2QncyBhIHdpdG5lc3MhIC8gSSdtIGEgdGVhciB5b3UgYXBhcnQgYnV0IEknbSBhIHNwYXJlIHlvdSBhIGhlYXJ0&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;UHJvZ3JhbSBpbnRvIHRoZSBzcGVlZCBvZiB0aGUgcmh5bWUsIHByZXBhcmUgdG8gc3RhcnQgLyBSaHl0aG0ncyBvdXQgb2YgdGhlIHJhZGl1cywgaW5zYW5lIGFzIHRoZSBjcmF6aWVzdA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;TXVzaWNhbCBtYWRuZXNzIE1DIGV2ZXIgbWFkZSwgc2VlIGl0J3MgLyBOb3cgYW4gZW1lcmdlbmN5LCBvcGVuLWhlYXJ0IHN1cmdlcnk=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;T3BlbiB5b3VyIG1pbmQsIHlvdSB3aWxsIGZpbmQgZXZlcnkgd29yZCdsbCBiZSAvIEZ1cmllciB0aGFuIGV2ZXIsIEkgcmVtYWluIHRoZSBmdXJ0dXJl&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QmF0dGxlJ3MgdGVtcHRpbmcuLi53aGF0ZXZlciBzdWl0cyB5YSEgLyBGb3Igd29yZHMgdGhlIHNlbnRlbmNlLCB0aGVyZSdzIG5vIHJlc2VtYmxhbmNl&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;WW91IHRoaW5rIHlvdSdyZSBydWZmZXIsIHRoZW4gc3VmZmVyIHRoZSBjb25zZXF1ZW5jZXMhIC8gSSdtIG5ldmVyIGR5aW5nLXRlcnJpZnlpbmcgcmVzdWx0cw==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SSB3YWtlIHlhIHdpdGggaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIHZvbHRzIC8gTWljLXRvLW1vdXRoIHJlc3VzY2l0YXRpb24sIHJoeXRobSB3aXRoIHJhZGlhdGlvbg==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Tm92b2NhaW4gZWFzZSB0aGUgcGFpbiBpdCBtaWdodCBzYXZlIGhpbSAvIElmIG5vdCwgRXJpYyBCLidzIHRoZSBqdWRnZSwgdGhlIGNyb3dkJ3MgdGhlIGp1cnk=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;WW8gUmFraW0sIHdoYXQncyB1cD8gLyBZbywgSSdtIGRvaW5nIHRoZSBrbm93bGVkZ2UsIEUuLCBtYW4gSSdtIHRyeWluZyB0byBnZXQgcGFpZCBpbiBmdWxs&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;V2VsbCwgY2hlY2sgdGhpcyBvdXQsIHNpbmNlIE5vcmJ5IFdhbHRlcnMgaXMgb3VyIGFnZW5jeSwgcmlnaHQ/IC8gVHJ1ZQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;S2FyYSBMZXdpcyBpcyBvdXIgYWdlbnQsIHdvcmQgdXAgLyBaYWtpYSBhbmQgNHRoIGFuZCBCcm9hZHdheSBpcyBvdXIgcmVjb3JkIGNvbXBhbnksIGluZGVlZA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;T2theSwgc28gd2hvIHdlIHJvbGxpbicgd2l0aCB0aGVuPyBXZSByb2xsaW4nIHdpdGggUnVzaCAvIE9mIFJ1c2h0b3duIE1hbmFnZW1lbnQ=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;Q2hlY2sgdGhpcyBvdXQsIHNpbmNlIHdlIHRhbGtpbmcgb3ZlciAvIFRoaXMgZGVmIGJlYXQgcmlnaHQgaGVyZSB0aGF0IEkgcHV0IHRvZ2V0aGVy&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SSB3YW5uYSBoZWFyIHNvbWUgb2YgdGhlbSBkZWYgcmh5bWVzLCB5b3Uga25vdyB3aGF0IEknbSBzYXlpbic/IC8gQW5kIHRvZ2V0aGVyLCB3ZSBjYW4gZ2V0IHBhaWQgaW4gZnVsbA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VGhpbmtpbicgb2YgYSBtYXN0ZXIgcGxhbiAvICdDdXogYWluJ3QgbnV0aGluJyBidXQgc3dlYXQgaW5zaWRlIG15IGhhbmQ=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U28gSSBkaWcgaW50byBteSBwb2NrZXQsIGFsbCBteSBtb25leSBpcyBzcGVudCAvIFNvIEkgZGlnIGRlZXBlciBidXQgc3RpbGwgY29taW4nIHVwIHdpdGggbGludA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U28gSSBzdGFydCBteSBtaXNzaW9uLCBsZWF2ZSBteSByZXNpZGVuY2UgLyBUaGlua2luJyBob3cgY291bGQgSSBnZXQgc29tZSBkZWFkIHByZXNpZGVudHM=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SSBuZWVkIG1vbmV5LCBJIHVzZWQgdG8gYmUgYSBzdGljay11cCBraWQgLyBTbyBJIHRoaW5rIG9mIGFsbCB0aGUgZGV2aW91cyB0aGluZ3MgSSBkaWQ=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;SSB1c2VkIHRvIHJvbGwgdXAsIHRoaXMgaXMgYSBob2xkIHVwLCBhaW4ndCBudXRoaW4nIGZ1bm55IC8gU3RvcCBzbWlsaW5nLCBiZSBzdGlsbCwgZG9uJ3QgbnV0aGluJyBtb3ZlIGJ1dCB0aGUgbW9uZXk=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QnV0IG5vdyBJIGxlYXJuZWQgdG8gZWFybiAnY3V6IEknbSByaWdodGVvdXMgLyBJIGZlZWwgZ3JlYXQsIHNvIG1heWJlIEkgbWlnaHQganVzdA==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U2VhcmNoIGZvciBhIG5pbmUgdG8gZml2ZSwgaWYgSSBzdHJpdmUgLyBUaGVuIG1heWJlIEknbGwgc3RheSBhbGl2ZQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U28gSSB3YWxrIHVwIHRoZSBzdHJlZXQgd2hpc3RsaW4nIHRoaXMgLyBGZWVsaW4nIG91dCBvZiBwbGFjZSAnY3V6LCBtYW4sIGRvIEkgbWlzcw==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QSBwZW4gYW5kIGEgcGFwZXIsIGEgc3RlcmVvLCBhIHRhcGUgb2YgLyBNZSBhbmQgRXJpYyBCLCBhbmQgYSBuaWNlIGJpZyBwbGF0ZSBvZg==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;RmlzaCwgd2hpY2ggaXMgbXkgZmF2b3JpdGUgZGlzaCAvIEJ1dCB3aXRob3V0IG5vIG1vbmV5IGl0J3Mgc3RpbGwgYSB3aXNo&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;J0N1eiBJIGRvbid0IGxpa2UgdG8gZHJlYW0gYWJvdXQgZ2V0dGluJyBwYWlkIC8gU28gSSBkaWcgaW50byB0aGUgYm9va3Mgb2YgdGhlIHJoeW1lcyB0aGF0IEkgbWFkZQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;U28gbm93IHRvIHRlc3QgdG8gc2VlIGlmIEkgZ290IHB1bGwgLyBIaXQgdGhlIHN0dWRpbywgJ2N1eiBJJ20gcGFpZCBpbiBmdWxs&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;UmFraW0sIGNoZWNrIHRoaXMgb3V0LCB5byAvIFlvdSBnbyB0byB5b3VyIGdpcmwgaG91c2UgYW5kIEknbGwgZ28gdG8gbWluZQ==&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;J0NhdXNlIG15IGdpcmwgaXMgZGVmaW5pdGVseSBtYWQgLyAnQ2F1c2UgaXQgdG9vayB1cyB0b28gbG9uZyB0byBkbyB0aGlzIGFsYnVt&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;WW8sIEkgaGVhciB3aGF0IHlvdSdyZSBzYXlpbmcgLyBTbyBsZXQncyBqdXN0IHB1bXAgdGhlIG11c2ljIHVw&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QW5kIGNvdW50IG91ciBtb25leSAvIFlvLCB3ZWxsIGNoZWNrIHRoaXMgb3V0LCB5byBFbGk=&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;VHVybiBkb3duIHRoZSBiYXNzIGRvd24gLyBBbmQgbGV0IHRoZSBiZWF0IGp1c3Qga2VlcCBvbiByb2NraW4n&#39;</span><span style="color: #f8f8f2">,</span> <span style="color: #e6db74">&#39;QW5kIHdlIG91dHRhIGhlcmUgLyBZbywgd2hhdCBoYXBwZW5lZCB0byBwZWFjZT8gLyBQZWFjZQ==&#39;</span><span style="color: #f8f8f2">]</span>

<span style="color: #f8f8f2">freqs</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">{</span>
      <span style="color: #e6db74">&#39;A&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0651738</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;B&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0124248</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;C&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0217339</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;D&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0349835</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;E&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.1241442</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;F&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0197881</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;G&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0158610</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;H&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0492888</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;I&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0558094</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;J&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0009033</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;K&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0050529</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;L&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0331490</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;M&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0202124</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;N&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0564513</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;O&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0596302</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;P&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0137645</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;Q&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0008606</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;R&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0497563</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;S&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0515760</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;T&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0729357</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;U&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0225134</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;V&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0082903</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;W&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0171272</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;X&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0013692</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;Y&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0145984</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39;Z&#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.0007836</span><span style="color: #f8f8f2">,</span>
      <span style="color: #e6db74">&#39; &#39;</span><span style="color: #f8f8f2">:</span> <span style="color: #ae81ff">0.1918182</span>
<span style="color: #f8f8f2">}</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">score</span><span style="color: #f8f8f2">(s):</span>
	<span style="color: #f8f8f2">score</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">s:</span>
		<span style="color: #f8f8f2">cur</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">chr(c)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">upper()</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">cur</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">freqs:</span>
			<span style="color: #f8f8f2">score</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">freqs[cur]</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">score</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">singleByteXor</span><span style="color: #f8f8f2">(string,</span> <span style="color: #f8f8f2">n):</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(n</span><span style="color: #f92672">^</span><span style="color: #f8f8f2">c)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;0&quot;</span><span style="color: #f8f8f2">))</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">string)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">xorStrings</span><span style="color: #f8f8f2">(data0,</span> <span style="color: #f8f8f2">data1):</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(data0[i]</span><span style="color: #f92672">^</span><span style="color: #f8f8f2">data1[i])[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(min(len(data0),len(data1))))</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">encrypt</span><span style="color: #f8f8f2">(plaintext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_ECB)</span>
	<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">keyLen</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(plaintext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span> <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(plaintext)</span><span style="color: #f92672">%</span><span style="color: #ae81ff">16</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span> <span style="color: #66d9ef">else</span> <span style="color: #f8f8f2">(len(plantext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">keyLen):</span>
		<span style="color: #f8f8f2">curCounter</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(counter)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:(BLOCKSIZE</span><span style="color: #f92672">+</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(BLOCKSIZE,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(nonce</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">curCounter)</span>
		<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xorStrings(plaintext,</span> <span style="color: #f8f8f2">keyStream)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">decrypt</span><span style="color: #f8f8f2">(ciphertext,</span> <span style="color: #f8f8f2">key,</span> <span style="color: #f8f8f2">nonce):</span>
	<span style="color: #f8f8f2">aes</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">new(key,</span> <span style="color: #f8f8f2">AES</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MODE_ECB)</span>
	<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
	<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #f8f8f2">keyLen</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span> <span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">len(ciphertext)</span><span style="color: #f92672">%</span><span style="color: #ae81ff">16</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span> <span style="color: #66d9ef">else</span> <span style="color: #f8f8f2">(len(ciphertext)</span><span style="color: #f92672">//</span><span style="color: #f8f8f2">BLOCKSIZE)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">keyLen):</span>
		<span style="color: #f8f8f2">curCounter</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(counter)[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:(BLOCKSIZE</span><span style="color: #f92672">+</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(BLOCKSIZE,</span><span style="color: #e6db74">&#39;0&#39;</span><span style="color: #f8f8f2">))[::</span><span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">aes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(nonce</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">curCounter)</span>
		<span style="color: #f8f8f2">counter</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xorStrings(ciphertext,</span> <span style="color: #f8f8f2">keyStream)</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getBlocks</span><span style="color: #f8f8f2">(ciphertexts,</span> <span style="color: #f8f8f2">keySize):</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(keySize):</span>
		<span style="color: #f8f8f2">block</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">j</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(len(ciphertexts)):</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">&lt;</span> <span style="color: #f8f8f2">len(ciphertexts[j]):</span>
				<span style="color: #f8f8f2">block</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">bytes([ciphertexts[j][i]])</span>
			<span style="color: #66d9ef">else</span><span style="color: #f8f8f2">:</span>
				<span style="color: #66d9ef">continue</span>
		<span style="color: #f8f8f2">ret</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(block)</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getKey</span><span style="color: #f8f8f2">(blocks):</span>
	<span style="color: #f8f8f2">key</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">block</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">blocks:</span>
		<span style="color: #f8f8f2">maxScore</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>
		<span style="color: #f8f8f2">keyGuess</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span><span style="color: #ae81ff">256</span><span style="color: #f8f8f2">):</span>
			<span style="color: #f8f8f2">curTry</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">singleByteXor(block,i)</span>
			<span style="color: #f8f8f2">curScore</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">score(curTry)</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">curScore</span> <span style="color: #f92672">&gt;</span> <span style="color: #f8f8f2">maxScore:</span>
				<span style="color: #f8f8f2">maxScore</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">curScore</span>
				<span style="color: #f8f8f2">keyGuess</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">bytes([i])</span>
		<span style="color: #f8f8f2">key</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">keyGuess</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">key</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">key</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">urandom(BLOCKSIZE)</span>
	<span style="color: #f8f8f2">nonce</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&#39;</span><span style="color: #ae81ff">\x00</span><span style="color: #e6db74">&#39;</span><span style="color: #f92672">*</span><span style="color: #f8f8f2">(BLOCKSIZE</span><span style="color: #f92672">//</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">ciphertexts</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">pt</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">plaintexts:</span>
		<span style="color: #f8f8f2">ciphertexts</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(decrypt(base64</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b64decode(pt),key,nonce))</span>
	<span style="color: #f8f8f2">keySize</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">len(max(ciphertexts,</span> <span style="color: #f8f8f2">key</span><span style="color: #f92672">=</span><span style="color: #f8f8f2">len))</span>
	<span style="color: #f8f8f2">blocks</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getBlocks(ciphertexts,</span> <span style="color: #f8f8f2">keySize)</span>
	<span style="color: #f8f8f2">keyGuess</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getKey(blocks)</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(len(ciphertexts)):</span>
		<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(xorStrings(ciphertexts[i],keyGuess))</span>

<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&quot;__main__&quot;</span><span style="color: #f8f8f2">:</span>
	<span style="color: #f8f8f2">main()</span>
</pre></div>


<p></p>
<p>Challenge 21:</p>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getLowestBits</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">number_of_bits):</span>
    <span style="color: #f8f8f2">mask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">number_of_bits)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">n</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">mask</span>

<span style="color: #66d9ef">class</span> <span style="color: #a6e22e">MT19937</span><span style="color: #f8f8f2">:</span>

	<span style="color: #75715e"># Coefficients for MT19937-32</span>
	<span style="color: #f8f8f2">w,</span> <span style="color: #f8f8f2">n,</span> <span style="color: #f8f8f2">m,</span> <span style="color: #f8f8f2">r</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">32</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">624</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">397</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">31</span>
	<span style="color: #f8f8f2">a</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0x9908b0df</span>
	<span style="color: #f8f8f2">u,</span> <span style="color: #f8f8f2">d</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">11</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xffffffff</span>
	<span style="color: #f8f8f2">s,</span> <span style="color: #f8f8f2">b</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">7</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0x9d2c5680</span>
	<span style="color: #f8f8f2">t,</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">15</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xefc60000</span>
	<span style="color: #f8f8f2">l</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">18</span>
	<span style="color: #f8f8f2">f</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1812433253</span>
	<span style="color: #f8f8f2">lowerMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">r)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
	<span style="color: #f8f8f2">upperMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getLowestBits(</span><span style="color: #f92672">not</span> <span style="color: #f8f8f2">lowerMask,</span> <span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">__init__</span><span style="color: #f8f8f2">(self,seed):</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(seed)</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index):</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(getLowestBits(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">f</span> <span style="color: #f92672">*</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)))</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">i,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w))</span>


	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">extract_number</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">&gt;=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n:</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">twist()</span>

		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index]</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">d</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">t)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">c</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">l)</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">getLowestBits(y,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">twist</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n):</span>
			<span style="color: #f8f8f2">x</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">upperMask)</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">lowerMask)</span>
			<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #ae81ff">1</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">%</span> <span style="color: #ae81ff">2</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">:</span>
 				<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">a</span>

			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">m)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">x_a</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
    <span style="color: #75715e"># Check if the numbers look random</span>
    <span style="color: #66d9ef">print</span><span style="color: #f8f8f2">(MT19937(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extract_number())</span>


<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&#39;__main__&#39;</span><span style="color: #f8f8f2">:</span>
    <span style="color: #f8f8f2">main()</span>
</pre></div>

<p></p>
<p>Challenge 22:</p>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">import</span> <span style="color: #f8f8f2">random</span>
<span style="color: #f92672">import</span> <span style="color: #f8f8f2">time</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getLowestBits</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">number_of_bits):</span>
    <span style="color: #f8f8f2">mask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">number_of_bits)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">n</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">mask</span>

<span style="color: #66d9ef">class</span> <span style="color: #a6e22e">MT19937</span><span style="color: #f8f8f2">:</span>

	<span style="color: #75715e"># Coefficients for MT19937-32</span>
	<span style="color: #f8f8f2">w,</span> <span style="color: #f8f8f2">n,</span> <span style="color: #f8f8f2">m,</span> <span style="color: #f8f8f2">r</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">32</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">624</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">397</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">31</span>
	<span style="color: #f8f8f2">a</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0x9908b0df</span>
	<span style="color: #f8f8f2">u,</span> <span style="color: #f8f8f2">d</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">11</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xffffffff</span>
	<span style="color: #f8f8f2">s,</span> <span style="color: #f8f8f2">b</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">7</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0x9d2c5680</span>
	<span style="color: #f8f8f2">t,</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">15</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xefc60000</span>
	<span style="color: #f8f8f2">l</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">18</span>
	<span style="color: #f8f8f2">f</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1812433253</span>
	<span style="color: #f8f8f2">lowerMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">r)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
	<span style="color: #f8f8f2">upperMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getLowestBits(</span><span style="color: #f92672">not</span> <span style="color: #f8f8f2">lowerMask,</span> <span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">__init__</span><span style="color: #f8f8f2">(self,seed):</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(seed)</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index):</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(getLowestBits(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">f</span> <span style="color: #f92672">*</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)))</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">i,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w))</span>


	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">extract_number</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">&gt;=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n:</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">twist()</span>

		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index]</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">d</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">t)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">c</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">l)</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">getLowestBits(y,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">twist</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n):</span>
			<span style="color: #f8f8f2">x</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">upperMask)</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">lowerMask)</span>
			<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #ae81ff">1</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">%</span> <span style="color: #ae81ff">2</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">:</span>
 				<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">a</span>

			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">m)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">x_a</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>

<span style="color: #75715e">#########################################################################################################</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">runRoutine</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">time</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">sleep(random</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">randint(</span><span style="color: #ae81ff">40</span><span style="color: #f8f8f2">,</span><span style="color: #ae81ff">100</span><span style="color: #f8f8f2">))</span>
	<span style="color: #f8f8f2">seed</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">int(time</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">time())</span>
	<span style="color: #f8f8f2">mt</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937(seed)</span>
	<span style="color: #f8f8f2">time</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">sleep(random</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">randint(</span><span style="color: #ae81ff">40</span><span style="color: #f8f8f2">,</span><span style="color: #ae81ff">100</span><span style="color: #f8f8f2">))</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">seed,</span> <span style="color: #f8f8f2">mt</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extract_number()</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">crackSeed</span><span style="color: #f8f8f2">(target):</span>
	<span style="color: #f8f8f2">curSeed</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">int(time</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">time())</span>
	<span style="color: #f8f8f2">curTry</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937(curSeed)</span>
	<span style="color: #66d9ef">while</span> <span style="color: #f8f8f2">curTry</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extract_number()</span> <span style="color: #f92672">!=</span> <span style="color: #f8f8f2">target:</span>
		<span style="color: #f8f8f2">curSeed</span> <span style="color: #f92672">-=</span> <span style="color: #ae81ff">1</span>
		<span style="color: #f8f8f2">curTry</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937(curSeed)</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">curSeed</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Running routine...&quot;</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">originalSeed,</span> <span style="color: #f8f8f2">target</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">runRoutine()</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Original seed:&quot;</span><span style="color: #f8f8f2">,originalSeed,</span><span style="color: #e6db74">&quot;</span><span style="color: #ae81ff">\n</span><span style="color: #e6db74">Target output:&quot;</span><span style="color: #f8f8f2">,target,</span><span style="color: #e6db74">&quot;</span><span style="color: #ae81ff">\n</span><span style="color: #e6db74">&quot;</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">seed</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">crackSeed(target)</span>
	<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Found original seed:&quot;</span><span style="color: #f8f8f2">,seed)</span>

<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&#39;__main__&#39;</span><span style="color: #f8f8f2">:</span>
    <span style="color: #f8f8f2">main()</span>
</pre></div>

<p></p>
<p>Challenge 23:</p>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">os</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">urandom</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getLowestBits</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">number_of_bits):</span>
    <span style="color: #f8f8f2">mask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">number_of_bits)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">n</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">mask</span>

<span style="color: #66d9ef">class</span> <span style="color: #a6e22e">MT19937</span><span style="color: #f8f8f2">:</span>

	<span style="color: #75715e"># Coefficients for MT19937-32</span>
	<span style="color: #f8f8f2">w,</span> <span style="color: #f8f8f2">n,</span> <span style="color: #f8f8f2">m,</span> <span style="color: #f8f8f2">r</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">32</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">624</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">397</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">31</span>
	<span style="color: #f8f8f2">a</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0x9908b0df</span>
	<span style="color: #f8f8f2">u,</span> <span style="color: #f8f8f2">d</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">11</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xffffffff</span>
	<span style="color: #f8f8f2">s,</span> <span style="color: #f8f8f2">b</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">7</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0x9d2c5680</span>
	<span style="color: #f8f8f2">t,</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">15</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xefc60000</span>
	<span style="color: #f8f8f2">l</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">18</span>
	<span style="color: #f8f8f2">f</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1812433253</span>
	<span style="color: #f8f8f2">lowerMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">r)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
	<span style="color: #f8f8f2">upperMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getLowestBits(</span><span style="color: #f92672">not</span> <span style="color: #f8f8f2">lowerMask,</span> <span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">__init__</span><span style="color: #f8f8f2">(self,seed):</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(seed)</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index):</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(getLowestBits(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">f</span> <span style="color: #f92672">*</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)))</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">i,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w))</span>


	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">extractNumber</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">&gt;=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n:</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">twist()</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index]</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">d</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">t)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">c</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">l)</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">getLowestBits(y,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">twist</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n):</span>
			<span style="color: #f8f8f2">x</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">upperMask)</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">lowerMask)</span>
			<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #ae81ff">1</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">%</span> <span style="color: #ae81ff">2</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">:</span>
 				<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">a</span>

			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">m)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">x_a</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">untemper</span><span style="color: #f8f8f2">(x):</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">l)</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">t)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">c</span>

	<span style="color: #f8f8f2">smask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">(smask</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">(smask</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">(MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s</span><span style="color: #f92672">*</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">))</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">(smask</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">(MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s</span><span style="color: #f92672">*</span><span style="color: #ae81ff">3</span><span style="color: #f8f8f2">))</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">(smask</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">(MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s</span><span style="color: #f92672">*</span><span style="color: #ae81ff">4</span><span style="color: #f8f8f2">))</span>

	<span style="color: #f8f8f2">umask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">(umask</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">(MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u</span><span style="color: #f92672">*</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">))</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">(umask</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span>
	<span style="color: #f8f8f2">x</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">umask</span>

	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">x</span>


<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">seed</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">int(bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">hex(urandom(</span><span style="color: #ae81ff">10</span><span style="color: #f8f8f2">)),</span><span style="color: #ae81ff">16</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">mt</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937(seed)</span>
	<span style="color: #f8f8f2">newMT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(MT19937</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n):</span>
		<span style="color: #f8f8f2">newMT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(</span> <span style="color: #f8f8f2">untemper(mt</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extractNumber())</span> <span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">clonedMT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">clonedMT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">newMT</span>

	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">1337</span><span style="color: #f8f8f2">):</span>
		<span style="color: #f8f8f2">curOriginal</span> <span style="color: #f92672">=</span>  <span style="color: #f8f8f2">mt</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extractNumber()</span>
		<span style="color: #f8f8f2">curCloned</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">clonedMT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extractNumber()</span>
		<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;</span><span style="color: #ae81ff">\n</span><span style="color: #e6db74">Original Generated:&quot;</span><span style="color: #f8f8f2">,curOriginal)</span>
		<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Cloned Generated:&quot;</span><span style="color: #f8f8f2">,curCloned)</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">curOriginal</span> <span style="color: #f92672">!=</span> <span style="color: #f8f8f2">curCloned:</span>
			<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Error: different values generated!&quot;</span><span style="color: #f8f8f2">)</span>
			<span style="color: #66d9ef">break</span>



<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&#39;__main__&#39;</span><span style="color: #f8f8f2">:</span>
    <span style="color: #f8f8f2">main()</span>
</pre></div>

<p></p>
<p>Challenge 24:</p>
<!-- HTML generated using hilite.me --><div style="background: #272822; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #f92672">from</span> <span style="color: #f8f8f2">os</span> <span style="color: #f92672">import</span> <span style="color: #f8f8f2">urandom</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">xor</span><span style="color: #f8f8f2">(s1,</span> <span style="color: #f8f8f2">s2):</span>
	<span style="color: #66d9ef">assert</span> <span style="color: #f8f8f2">len(s1)</span> <span style="color: #f92672">==</span> <span style="color: #f8f8f2">len(s2)</span>
	<span style="color: #f8f8f2">ret</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">join(</span> <span style="color: #f8f8f2">bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">fromhex(hex(s1[i]</span><span style="color: #f92672">^</span><span style="color: #f8f8f2">s2[i])[</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">:]</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">rjust(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">,</span><span style="color: #e6db74">&quot;0&quot;</span><span style="color: #f8f8f2">))</span> <span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,len(s1))</span> <span style="color: #f8f8f2">)</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">ret</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">getLowestBits</span><span style="color: #f8f8f2">(n,</span> <span style="color: #f8f8f2">number_of_bits):</span>
    <span style="color: #f8f8f2">mask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">number_of_bits)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
    <span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">n</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">mask</span>

<span style="color: #66d9ef">class</span> <span style="color: #a6e22e">MT19937</span><span style="color: #f8f8f2">:</span>

	<span style="color: #75715e"># Coefficients for MT19937-32</span>
	<span style="color: #f8f8f2">w,</span> <span style="color: #f8f8f2">n,</span> <span style="color: #f8f8f2">m,</span> <span style="color: #f8f8f2">r</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">32</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">624</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">397</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">31</span>
	<span style="color: #f8f8f2">a</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0x9908b0df</span>
	<span style="color: #f8f8f2">u,</span> <span style="color: #f8f8f2">d</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">11</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xffffffff</span>
	<span style="color: #f8f8f2">s,</span> <span style="color: #f8f8f2">b</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">7</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0x9d2c5680</span>
	<span style="color: #f8f8f2">t,</span> <span style="color: #f8f8f2">c</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">15</span><span style="color: #f8f8f2">,</span> <span style="color: #ae81ff">0xefc60000</span>
	<span style="color: #f8f8f2">l</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">18</span>
	<span style="color: #f8f8f2">f</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">1812433253</span>
	<span style="color: #f8f8f2">lowerMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(</span><span style="color: #ae81ff">1</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">r)</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span>
	<span style="color: #f8f8f2">upperMask</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">getLowestBits(</span><span style="color: #f92672">not</span> <span style="color: #f8f8f2">lowerMask,</span> <span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">__init__</span><span style="color: #f8f8f2">(self,seed):</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">[]</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(seed)</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index):</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">append(getLowestBits(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">f</span> <span style="color: #f92672">*</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">]</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w</span> <span style="color: #f92672">-</span> <span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)))</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">i,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w))</span>


	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">extractNumber</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">&gt;=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n:</span>
			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">twist()</span>

		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index]</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">u)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">d</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">s)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">b</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&lt;&lt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">t)</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">c</span>
		<span style="color: #f8f8f2">y</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">(y</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">l)</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">+=</span> <span style="color: #ae81ff">1</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">getLowestBits(y,</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">w)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">twist</span><span style="color: #f8f8f2">(self):</span>
		<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n):</span>
			<span style="color: #f8f8f2">x</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">upperMask)</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">&amp;</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">lowerMask)</span>
			<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">&gt;&gt;</span> <span style="color: #ae81ff">1</span>
			<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">x</span> <span style="color: #f92672">%</span> <span style="color: #ae81ff">2</span> <span style="color: #f92672">!=</span> <span style="color: #ae81ff">0</span><span style="color: #f8f8f2">:</span>
 				<span style="color: #f8f8f2">x_a</span> <span style="color: #f92672">^=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">a</span>

			<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[i]</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">MT[(i</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">m)</span> <span style="color: #f92672">%</span> <span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">n]</span> <span style="color: #f92672">^</span> <span style="color: #f8f8f2">x_a</span>

		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">index</span> <span style="color: #f92672">=</span> <span style="color: #ae81ff">0</span>


<span style="color: #66d9ef">class</span> <span style="color: #a6e22e">MT19937Cipher</span><span style="color: #f8f8f2">:</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">__init__</span><span style="color: #f8f8f2">(self,seed):</span>
		<span style="color: #f8f8f2">self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">mt</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937(seed)</span>

	<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">encrypt</span><span style="color: #f8f8f2">(self,plaintext):</span>
		<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;&quot;</span>
		<span style="color: #66d9ef">while</span> <span style="color: #f8f8f2">len(keyStream)</span> <span style="color: #f92672">&lt;</span> <span style="color: #f8f8f2">len(plaintext):</span>
			<span style="color: #f8f8f2">keyStream</span> <span style="color: #f92672">+=</span> <span style="color: #f8f8f2">str(self</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">mt</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">extractNumber())</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encode()</span>
		<span style="color: #75715e">#ciphertext = hex(int(bytes.hex(plaintext),16) ^ int(bytes.hex(keyStream[:len(plaintext)]),16))[2:].encode()</span>
		<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">xor(plaintext,keyStream[:len(plaintext)])</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">breakCipher</span><span style="color: #f8f8f2">(ciphertext,crib):</span>
	<span style="color: #66d9ef">for</span> <span style="color: #f8f8f2">i</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">range(</span><span style="color: #ae81ff">0</span><span style="color: #f8f8f2">,</span><span style="color: #ae81ff">2</span><span style="color: #f92672">**</span><span style="color: #ae81ff">16</span><span style="color: #f8f8f2">):</span>
		<span style="color: #f8f8f2">curMT</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937Cipher(i)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(ciphertext)</span>
		<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">crib</span> <span style="color: #f92672">in</span> <span style="color: #f8f8f2">curMT:</span>
			<span style="color: #66d9ef">return</span> <span style="color: #f8f8f2">i</span>
	<span style="color: #66d9ef">return</span> <span style="color: #f92672">-</span><span style="color: #ae81ff">1</span>

<span style="color: #66d9ef">def</span> <span style="color: #a6e22e">main</span><span style="color: #f8f8f2">():</span>
	<span style="color: #f8f8f2">seed</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">int(bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">hex(urandom(</span><span style="color: #ae81ff">2</span><span style="color: #f8f8f2">)),</span><span style="color: #ae81ff">16</span><span style="color: #f8f8f2">)</span>
	<span style="color: #f8f8f2">prefix</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">urandom(int(bytes</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">hex(urandom(</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">)),</span><span style="color: #ae81ff">16</span><span style="color: #f8f8f2">))</span>
	<span style="color: #f8f8f2">plaintext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">prefix</span> <span style="color: #f92672">+</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;A&quot;</span><span style="color: #f92672">*</span><span style="color: #ae81ff">16</span>
	<span style="color: #f8f8f2">ciphertext</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">MT19937Cipher(seed)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(plaintext)</span>
	<span style="color: #f8f8f2">recoveredSeed</span> <span style="color: #f92672">=</span> <span style="color: #f8f8f2">breakCipher(ciphertext,</span> <span style="color: #f8f8f2">b</span><span style="color: #e6db74">&quot;A&quot;</span><span style="color: #f92672">*</span><span style="color: #ae81ff">16</span><span style="color: #f8f8f2">)</span>
	<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">recoveredSeed</span> <span style="color: #f92672">!=</span> <span style="color: #f92672">-</span><span style="color: #ae81ff">1</span><span style="color: #f8f8f2">:</span>
		<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Seed recovered successfully.</span><span style="color: #ae81ff">\n</span><span style="color: #e6db74">Original plaintext:&quot;</span><span style="color: #f8f8f2">,</span> <span style="color: #f8f8f2">MT19937Cipher(recoveredSeed)</span><span style="color: #f92672">.</span><span style="color: #f8f8f2">encrypt(ciphertext))</span>
	<span style="color: #66d9ef">else</span><span style="color: #f8f8f2">:</span>
		<span style="color: #66d9ef">print</span> <span style="color: #f8f8f2">(</span><span style="color: #e6db74">&quot;Failed to recover seed&quot;</span><span style="color: #f8f8f2">)</span>

<span style="color: #66d9ef">if</span> <span style="color: #f8f8f2">__name__</span> <span style="color: #f92672">==</span> <span style="color: #e6db74">&#39;__main__&#39;</span><span style="color: #f8f8f2">:</span>
    <span style="color: #f8f8f2">main()</span>
</pre></div>
